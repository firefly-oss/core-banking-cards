-- Create tables for the database

-- Create base tables without foreign key constraints

-- Issuer table
CREATE TABLE issuer (
    issuer_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    issuer_name VARCHAR(255) NOT NULL,
    issuer_code VARCHAR(50) NOT NULL,
    country_code VARCHAR(3),
    contact_email VARCHAR(255),
    contact_phone VARCHAR(20),
    is_active BOOLEAN DEFAULT TRUE,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Network table
CREATE TABLE card_network (
    card_network_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    network_name VARCHAR(255) NOT NULL,
    network_code VARCHAR(50) NOT NULL,
    network_logo_url VARCHAR(255),
    support_contact VARCHAR(255),
    api_endpoint VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Type table
CREATE TABLE card_type (
    card_type_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    type_name VARCHAR(255) NOT NULL,
    type_code VARCHAR(50) NOT NULL,
    is_credit BOOLEAN DEFAULT FALSE,
    is_debit BOOLEAN DEFAULT FALSE,
    is_prepaid BOOLEAN DEFAULT FALSE,
    is_virtual BOOLEAN DEFAULT FALSE,
    is_commercial BOOLEAN DEFAULT FALSE,
    is_gift BOOLEAN DEFAULT FALSE,
    default_credit_limit DOUBLE PRECISION,
    default_daily_limit DOUBLE PRECISION,
    is_active BOOLEAN DEFAULT TRUE,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- BIN table
CREATE TABLE bin (
    bin_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    bin_number VARCHAR(8) NOT NULL,
    bin_length INTEGER,
    issuer_id UUID REFERENCES issuer(issuer_id),
    card_network_id UUID REFERENCES card_network(card_network_id),
    card_type_id UUID REFERENCES card_type(card_type_id),
    country_code VARCHAR(3),
    currency_code VARCHAR(3),
    is_active BOOLEAN DEFAULT TRUE,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Design table
CREATE TABLE card_design (
    design_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    design_name VARCHAR(255) NOT NULL,
    design_code VARCHAR(50) NOT NULL,
    front_image_url VARCHAR(255),
    back_image_url VARCHAR(255),
    card_type_id UUID REFERENCES card_type(card_type_id),
    issuer_id UUID REFERENCES issuer(issuer_id),
    card_network_id UUID REFERENCES card_network(card_network_id),
    is_customizable BOOLEAN DEFAULT FALSE,
    is_default BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Program table
CREATE TABLE card_program (
    program_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    program_name VARCHAR(255) NOT NULL,
    program_code VARCHAR(50) NOT NULL,
    issuer_id UUID REFERENCES issuer(issuer_id),
    bin_id UUID REFERENCES bin(bin_id),
    card_type_id UUID REFERENCES card_type(card_type_id),
    card_network_id UUID REFERENCES card_network(card_network_id),
    default_design_id UUID REFERENCES card_design(design_id),
    start_date TIMESTAMP,
    end_date TIMESTAMP,
    is_active BOOLEAN DEFAULT TRUE,
    max_cards_per_party INTEGER,
    default_daily_limit DOUBLE PRECISION,
    default_monthly_limit DOUBLE PRECISION,
    default_credit_limit DOUBLE PRECISION,
    supports_physical_cards BOOLEAN DEFAULT TRUE,
    supports_virtual_cards BOOLEAN DEFAULT TRUE,
    currency_code VARCHAR(3),
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card table
CREATE TABLE card (
    card_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_number VARCHAR(19) NOT NULL,
    masked_card_number VARCHAR(19),
    card_sequence_number VARCHAR(3),
    bin_id UUID REFERENCES bin(bin_id),
    card_type_id UUID REFERENCES card_type(card_type_id),
    card_network_id UUID REFERENCES card_network(card_network_id),
    issuer_id UUID REFERENCES issuer(issuer_id),
    contract_id UUID,
    account_id UUID,
    party_id UUID,
    card_status card_status_enum,
    card_holder_name VARCHAR(255),
    card_holder_id VARCHAR(50),
    expiration_month INTEGER,
    expiration_year INTEGER,
    cvv VARCHAR(4),
    pin VARCHAR(4),
    activation_date TIMESTAMP,
    issuance_date TIMESTAMP,
    expiration_date TIMESTAMP,
    last_used_date TIMESTAMP,
    is_physical BOOLEAN DEFAULT FALSE,
    is_virtual BOOLEAN DEFAULT FALSE,
    is_primary BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    is_locked BOOLEAN DEFAULT FALSE,
    lock_reason VARCHAR(255),
    daily_limit DOUBLE PRECISION,
    monthly_limit DOUBLE PRECISION,
    credit_limit DOUBLE PRECISION,
    available_balance DOUBLE PRECISION,
    currency_code VARCHAR(3),
    design_id UUID REFERENCES card_design(design_id),
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Physical Card table
CREATE TABLE physical_card (
    physical_card_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    embossed_name VARCHAR(255),
    plastic_id VARCHAR(50),
    design_id UUID REFERENCES card_design(design_id),
    is_contactless BOOLEAN DEFAULT TRUE,
    is_chip BOOLEAN DEFAULT TRUE,
    is_magstripe BOOLEAN DEFAULT TRUE,
    manufacturing_status VARCHAR(50),
    manufacturing_date TIMESTAMP,
    shipping_address VARCHAR(255),
    shipping_city VARCHAR(100),
    shipping_state VARCHAR(100),
    shipping_country VARCHAR(3),
    shipping_postal_code VARCHAR(20),
    shipping_method VARCHAR(50),
    shipping_tracking_number VARCHAR(50),
    shipping_carrier VARCHAR(50),
    shipment_date TIMESTAMP,
    estimated_delivery_date TIMESTAMP,
    actual_delivery_date TIMESTAMP,
    activation_method VARCHAR(50),
    activation_date TIMESTAMP,
    is_activated BOOLEAN DEFAULT FALSE,
    replacement_reason VARCHAR(255),
    previous_card_id UUID REFERENCES card(card_id),
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Virtual Card table
CREATE TABLE virtual_card (
    virtual_card_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    device_id VARCHAR(255),
    device_type VARCHAR(50),
    device_model VARCHAR(50),
    device_os VARCHAR(50),
    device_os_version VARCHAR(50),
    wallet_provider VARCHAR(50),
    wallet_account_id VARCHAR(255),
    tokenization_provider VARCHAR(50),
    token_id VARCHAR(255),
    token_expiry_date TIMESTAMP,
    token_status VARCHAR(50),
    virtual_card_number VARCHAR(19),
    virtual_card_status virtual_card_status_enum,
    is_default_for_device BOOLEAN DEFAULT FALSE,
    is_default_for_wallet BOOLEAN DEFAULT FALSE,
    is_provisioned BOOLEAN DEFAULT FALSE,
    provisioning_date TIMESTAMP,
    last_used_date TIMESTAMP,
    creation_timestamp TIMESTAMP,
    update_timestamp TIMESTAMP,
    deactivation_date TIMESTAMP,
    deactivation_reason VARCHAR(255),
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Balance table
CREATE TABLE card_balance (
    balance_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    available_balance DOUBLE PRECISION,
    ledger_balance DOUBLE PRECISION,
    pending_authorizations DOUBLE PRECISION,
    credit_limit DOUBLE PRECISION,
    available_credit DOUBLE PRECISION,
    currency_code VARCHAR(3),
    last_update_timestamp TIMESTAMP,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Merchant table
CREATE TABLE card_merchant (
    merchant_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    merchant_reference VARCHAR(50),
    merchant_name VARCHAR(255) NOT NULL,
    merchant_legal_name VARCHAR(255),
    merchant_category_code VARCHAR(4),
    merchant_category_name VARCHAR(255),
    merchant_type VARCHAR(50),
    merchant_status VARCHAR(50),
    is_active BOOLEAN DEFAULT TRUE,
    tax_id VARCHAR(50),
    website_url VARCHAR(255),
    logo_url VARCHAR(255),
    address_line1 VARCHAR(255),
    city VARCHAR(100),
    country VARCHAR(3),
    phone VARCHAR(20),
    email VARCHAR(255),
    is_online BOOLEAN DEFAULT FALSE,
    is_physical BOOLEAN DEFAULT TRUE,
    is_international BOOLEAN DEFAULT FALSE,
    risk_rating VARCHAR(50),
    risk_score INTEGER,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Terminal table
CREATE TABLE card_terminal (
    terminal_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    terminal_reference VARCHAR(50),
    terminal_serial_number VARCHAR(50),
    terminal_name VARCHAR(255),
    terminal_type VARCHAR(50),
    terminal_model VARCHAR(50),
    terminal_manufacturer VARCHAR(50),
    terminal_status VARCHAR(50),
    is_active BOOLEAN DEFAULT TRUE,
    merchant_id UUID REFERENCES card_merchant(merchant_id),
    merchant_name VARCHAR(255),
    address_line1 VARCHAR(255),
    city VARCHAR(100),
    country VARCHAR(3),
    acquirer_id VARCHAR(50),
    acquirer_name VARCHAR(255),
    processor_id VARCHAR(50),
    is_contactless BOOLEAN DEFAULT TRUE,
    is_chip BOOLEAN DEFAULT TRUE,
    is_magstripe BOOLEAN DEFAULT TRUE,
    is_pin_supported BOOLEAN DEFAULT TRUE,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Transaction table
CREATE TABLE card_transaction (
    card_transaction_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    account_id UUID,
    party_id UUID,
    transaction_reference VARCHAR(50),
    provider_reference VARCHAR(50),
    network_reference VARCHAR(50),
    external_reference VARCHAR(50),
    transaction_amount DECIMAL(19, 4),
    transaction_currency VARCHAR(3),
    billing_amount DECIMAL(19, 4),
    billing_currency VARCHAR(3),
    exchange_rate DECIMAL(19, 4),
    fee_amount DECIMAL(19, 4),
    fee_currency VARCHAR(3),
    tax_amount DECIMAL(19, 4),
    tax_currency VARCHAR(3),
    transaction_timestamp TIMESTAMP,
    authorization_timestamp TIMESTAMP,
    settlement_timestamp TIMESTAMP,
    transaction_type transaction_type_enum,
    transaction_status transaction_status_enum,
    authorization_code VARCHAR(50),
    response_code VARCHAR(50),
    response_message VARCHAR(255),
    merchant_id VARCHAR(50),
    merchant_name VARCHAR(255),
    merchant_category_code VARCHAR(50),
    merchant_category_name VARCHAR(255),
    merchant_city VARCHAR(100),
    merchant_state VARCHAR(100),
    merchant_country VARCHAR(3),
    merchant_postal_code VARCHAR(20),
    terminal_id VARCHAR(50),
    terminal_type VARCHAR(50),
    entry_mode VARCHAR(50),
    channel_type VARCHAR(50),
    is_card_present BOOLEAN DEFAULT FALSE,
    is_pin_verified BOOLEAN DEFAULT FALSE,
    is_signature_verified BOOLEAN DEFAULT FALSE,
    is_3d_secure BOOLEAN DEFAULT FALSE,
    is_tokenized BOOLEAN DEFAULT FALSE,
    is_recurring BOOLEAN DEFAULT FALSE,
    is_installment BOOLEAN DEFAULT FALSE,
    installment_plan VARCHAR(50),
    installment_number INTEGER,
    total_installments INTEGER,
    is_international BOOLEAN DEFAULT FALSE,
    is_atm_withdrawal BOOLEAN DEFAULT FALSE,
    is_online BOOLEAN DEFAULT FALSE,
    is_contactless BOOLEAN DEFAULT FALSE,
    is_disputed BOOLEAN DEFAULT FALSE,
    dispute_reason VARCHAR(255),
    dispute_status VARCHAR(50),
    dispute_timestamp TIMESTAMP,
    is_fraud_suspected BOOLEAN DEFAULT FALSE,
    fraud_reason VARCHAR(255),
    fraud_score INTEGER,
    device_id VARCHAR(255),
    ip_address VARCHAR(50),
    user_agent VARCHAR(255),
    geolocation VARCHAR(100),
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Dispute table
CREATE TABLE card_dispute (
    dispute_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    transaction_id UUID REFERENCES card_transaction(card_transaction_id),
    party_id UUID,
    account_id UUID,
    dispute_reference VARCHAR(50),
    provider_reference VARCHAR(50),
    network_reference VARCHAR(50),
    dispute_reason_code VARCHAR(50),
    dispute_reason_description VARCHAR(255),
    dispute_status VARCHAR(50),
    dispute_stage VARCHAR(50),
    dispute_amount DECIMAL(19, 4),
    dispute_currency VARCHAR(3),
    filing_timestamp TIMESTAMP,
    response_due_date TIMESTAMP,
    resolution_timestamp TIMESTAMP,
    resolution_code VARCHAR(50),
    resolution_description VARCHAR(255),
    is_cardholder_credited BOOLEAN DEFAULT FALSE,
    credit_timestamp TIMESTAMP,
    credit_amount DECIMAL(19, 4),
    credit_currency VARCHAR(3),
    is_merchant_debited BOOLEAN DEFAULT FALSE,
    debit_timestamp TIMESTAMP,
    debit_amount DECIMAL(19, 4),
    debit_currency VARCHAR(3),
    cardholder_statement TEXT,
    merchant_response TEXT,
    evidence_documents TEXT,
    assigned_agent_id UUID,
    assigned_agent_name VARCHAR(100),
    last_updated_timestamp TIMESTAMP,
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Statement table
CREATE TABLE card_statement (
    statement_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    party_id UUID,
    account_id UUID,
    statement_reference VARCHAR(50),
    statement_date TIMESTAMP,
    statement_period_start TIMESTAMP,
    statement_period_end TIMESTAMP,
    due_date TIMESTAMP,
    closing_balance DECIMAL(19, 4),
    opening_balance DECIMAL(19, 4),
    minimum_payment_due DECIMAL(19, 4),
    total_payment_due DECIMAL(19, 4),
    currency_code VARCHAR(3),
    total_purchases DECIMAL(19, 4),
    total_cash_advances DECIMAL(19, 4),
    total_fees DECIMAL(19, 4),
    total_interest DECIMAL(19, 4),
    payment_status VARCHAR(50),
    is_generated BOOLEAN DEFAULT FALSE,
    delivery_method VARCHAR(50),
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Payment table
CREATE TABLE card_payment (
    payment_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    party_id UUID,
    account_id UUID,
    statement_id UUID REFERENCES card_statement(statement_id),
    payment_reference VARCHAR(50),
    external_reference VARCHAR(50),
    payment_amount DECIMAL(19, 4),
    currency_code VARCHAR(3),
    payment_method VARCHAR(50),
    payment_channel VARCHAR(50),
    payment_status VARCHAR(50),
    payment_timestamp TIMESTAMP,
    posting_timestamp TIMESTAMP,
    is_auto_payment BOOLEAN DEFAULT FALSE,
    is_minimum_payment BOOLEAN DEFAULT FALSE,
    is_full_payment BOOLEAN DEFAULT FALSE,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Activity table
CREATE TABLE card_activity (
    activity_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    party_id UUID,
    account_id UUID,
    activity_reference VARCHAR(50),
    activity_type VARCHAR(50),
    activity_category VARCHAR(50),
    activity_description TEXT,
    activity_timestamp TIMESTAMP,
    activity_channel VARCHAR(50),
    activity_source VARCHAR(50),
    activity_status VARCHAR(50),
    activity_result VARCHAR(50),
    activity_details TEXT,
    previous_value TEXT,
    new_value TEXT,
    change_reason TEXT,
    change_authorized_by VARCHAR(100),
    ip_address VARCHAR(50),
    device_id VARCHAR(255),
    device_type VARCHAR(50),
    device_os VARCHAR(50),
    browser_type VARCHAR(50),
    user_agent VARCHAR(255),
    geolocation VARCHAR(100),
    is_party_initiated BOOLEAN DEFAULT FALSE,
    is_system_initiated BOOLEAN DEFAULT FALSE,
    is_agent_initiated BOOLEAN DEFAULT FALSE,
    agent_id VARCHAR(50),
    agent_name VARCHAR(100),
    is_successful BOOLEAN DEFAULT FALSE,
    failure_reason VARCHAR(255),
    failure_code VARCHAR(50),
    is_notification_sent BOOLEAN DEFAULT FALSE,
    notification_channel VARCHAR(50),
    notification_timestamp TIMESTAMP,
    notification_recipient VARCHAR(255),
    related_entity_type VARCHAR(50),
    related_entity_id UUID,
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Limit table
CREATE TABLE card_limit (
    limit_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    party_id UUID,
    limit_type limit_type_enum,
    limit_value DOUBLE PRECISION,
    currency_code VARCHAR(3),
    is_active BOOLEAN DEFAULT TRUE,
    effective_from TIMESTAMP,
    effective_to TIMESTAMP,
    reset_period reset_period_enum,
    is_default BOOLEAN DEFAULT FALSE,
    channel VARCHAR(50),
    transaction_type VARCHAR(50),
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Fee table
CREATE TABLE card_fee (
    fee_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    program_id UUID REFERENCES card_program(program_id),
    fee_type VARCHAR(50),
    fee_name VARCHAR(255),
    fee_amount DOUBLE PRECISION,
    currency_code VARCHAR(3),
    frequency VARCHAR(50),
    is_active BOOLEAN DEFAULT TRUE,
    effective_from TIMESTAMP,
    effective_to TIMESTAMP,
    is_waived BOOLEAN DEFAULT FALSE,
    waiver_reason VARCHAR(255),
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Interest table
CREATE TABLE card_interest (
    interest_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    program_id UUID REFERENCES card_program(program_id),
    interest_type VARCHAR(50),
    interest_rate DOUBLE PRECISION,
    annual_percentage_rate DOUBLE PRECISION,
    calculation_method VARCHAR(50),
    application_frequency VARCHAR(50),
    is_active BOOLEAN DEFAULT TRUE,
    effective_from TIMESTAMP,
    effective_to TIMESTAMP,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Promotion table
CREATE TABLE card_promotion (
    promotion_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    program_id UUID REFERENCES card_program(program_id),
    promotion_code VARCHAR(50),
    promotion_name VARCHAR(255),
    promotion_description TEXT,
    start_date TIMESTAMP,
    end_date TIMESTAMP,
    is_active BOOLEAN DEFAULT TRUE,
    promotion_type VARCHAR(50),
    discount_percentage DOUBLE PRECISION,
    discount_amount DOUBLE PRECISION,
    currency_code VARCHAR(3),
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Reward table
CREATE TABLE card_reward (
    reward_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    transaction_id UUID REFERENCES card_transaction(card_transaction_id),
    party_id UUID,
    account_id UUID,
    program_id UUID REFERENCES card_program(program_id),
    reward_reference VARCHAR(50),
    reward_type VARCHAR(50),
    reward_category VARCHAR(50),
    reward_description TEXT,
    reward_status VARCHAR(50),
    is_earning BOOLEAN DEFAULT FALSE,
    is_redemption BOOLEAN DEFAULT FALSE,
    is_adjustment BOOLEAN DEFAULT FALSE,
    is_expiration BOOLEAN DEFAULT FALSE,
    points_earned DECIMAL(19, 4),
    points_redeemed DECIMAL(19, 4),
    points_adjusted DECIMAL(19, 4),
    points_expired DECIMAL(19, 4),
    points_balance DECIMAL(19, 4),
    cash_value DECIMAL(19, 4),
    currency_code VARCHAR(3),
    earning_rate DECIMAL(19, 4),
    earning_multiplier DECIMAL(19, 4),
    earning_reason VARCHAR(255),
    redemption_type VARCHAR(50),
    redemption_description TEXT,
    redemption_value DECIMAL(19, 4),
    adjustment_reason VARCHAR(255),
    adjustment_description TEXT,
    merchant_id VARCHAR(50),
    merchant_name VARCHAR(255),
    merchant_category VARCHAR(50),
    transaction_amount DECIMAL(19, 4),
    transaction_currency VARCHAR(3),
    transaction_date TIMESTAMP,
    posting_date TIMESTAMP,
    earning_date TIMESTAMP,
    expiry_date TIMESTAMP,
    is_promotional BOOLEAN DEFAULT FALSE,
    promotion_id UUID REFERENCES card_promotion(promotion_id),
    promotion_name VARCHAR(255),
    is_transferable BOOLEAN DEFAULT FALSE,
    transfer_to_party_id UUID,
    transfer_from_party_id UUID,
    transfer_date TIMESTAMP,
    is_redeemed BOOLEAN DEFAULT FALSE,
    redemption_date TIMESTAMP,
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Security table
CREATE TABLE card_security (
    security_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    security_feature security_feature_enum,
    is_enabled BOOLEAN DEFAULT TRUE,
    enabled_date TIMESTAMP,
    disabled_date TIMESTAMP,
    last_updated_by VARCHAR(50),
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Configuration table
CREATE TABLE card_configuration (
    configuration_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    config_type config_type_enum,
    is_enabled BOOLEAN DEFAULT TRUE,
    enabled_date TIMESTAMP,
    disabled_date TIMESTAMP,
    last_updated_by VARCHAR(50),
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Provider table
CREATE TABLE card_provider (
    provider_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    provider_name VARCHAR(255) NOT NULL,
    provider_code VARCHAR(50) NOT NULL,
    provider_type VARCHAR(50),
    contact_name VARCHAR(255),
    contact_email VARCHAR(255),
    contact_phone VARCHAR(20),
    api_endpoint VARCHAR(255),
    api_key VARCHAR(255),
    api_secret VARCHAR(255),
    integration_date TIMESTAMP,
    status provider_status_enum,
    is_active BOOLEAN DEFAULT TRUE,
    contract_start_date TIMESTAMP,
    contract_end_date TIMESTAMP,
    license_number VARCHAR(50),
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Acquirer table
CREATE TABLE card_acquirer (
    acquirer_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    acquirer_name VARCHAR(255) NOT NULL,
    acquirer_code VARCHAR(50) NOT NULL,
    contact_name VARCHAR(255),
    contact_email VARCHAR(255),
    contact_phone VARCHAR(20),
    country_code VARCHAR(3),
    is_active BOOLEAN DEFAULT TRUE,
    settlement_currency VARCHAR(3),
    settlement_period VARCHAR(50),
    fee_structure TEXT,
    api_endpoint VARCHAR(255),
    api_key VARCHAR(255),
    api_secret VARCHAR(255),
    integration_date TIMESTAMP,
    contract_start_date TIMESTAMP,
    contract_end_date TIMESTAMP,
    license_number VARCHAR(50),
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Processor table
CREATE TABLE card_processor (
    processor_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    processor_name VARCHAR(255) NOT NULL,
    processor_code VARCHAR(50) NOT NULL,
    contact_name VARCHAR(255),
    contact_email VARCHAR(255),
    contact_phone VARCHAR(20),
    country_code VARCHAR(3),
    is_active BOOLEAN DEFAULT TRUE,
    processing_currency VARCHAR(3),
    fee_structure TEXT,
    api_endpoint VARCHAR(255),
    api_key VARCHAR(255),
    api_secret VARCHAR(255),
    integration_date TIMESTAMP,
    contract_start_date TIMESTAMP,
    contract_end_date TIMESTAMP,
    license_number VARCHAR(50),
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Gateway table
CREATE TABLE card_gateway (
    gateway_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    gateway_name VARCHAR(255) NOT NULL,
    gateway_code VARCHAR(50) NOT NULL,
    contact_name VARCHAR(255),
    contact_email VARCHAR(255),
    contact_phone VARCHAR(20),
    country_code VARCHAR(3),
    is_active BOOLEAN DEFAULT TRUE,
    supported_currencies TEXT,
    fee_structure TEXT,
    api_endpoint VARCHAR(255),
    api_key VARCHAR(255),
    api_secret VARCHAR(255),
    integration_date TIMESTAMP,
    contract_start_date TIMESTAMP,
    contract_end_date TIMESTAMP,
    license_number VARCHAR(50),
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Application table
CREATE TABLE card_application (
    application_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    party_id UUID,
    account_id UUID,
    application_reference VARCHAR(50),
    application_type VARCHAR(50),
    card_type_id UUID REFERENCES card_type(card_type_id),
    program_id UUID REFERENCES card_program(program_id),
    design_id UUID REFERENCES card_design(design_id),
    application_status VARCHAR(50),
    application_stage VARCHAR(50),
    application_channel VARCHAR(50),
    application_timestamp TIMESTAMP,
    applicant_first_name VARCHAR(255),
    applicant_middle_name VARCHAR(255),
    applicant_last_name VARCHAR(255),
    applicant_email VARCHAR(255),
    applicant_phone VARCHAR(20),
    applicant_address_line1 VARCHAR(255),
    applicant_address_line2 VARCHAR(255),
    applicant_city VARCHAR(100),
    applicant_state VARCHAR(100),
    applicant_postal_code VARCHAR(20),
    applicant_country VARCHAR(3),
    applicant_id_type VARCHAR(50),
    applicant_id_number VARCHAR(50),
    applicant_id_expiry TIMESTAMP,
    applicant_date_of_birth TIMESTAMP,
    applicant_nationality VARCHAR(50),
    employment_status VARCHAR(50),
    employer_name VARCHAR(255),
    employment_position VARCHAR(100),
    annual_income DECIMAL(19, 4),
    income_currency VARCHAR(3),
    requested_credit_limit DECIMAL(19, 4),
    approved_credit_limit DECIMAL(19, 4),
    currency_code VARCHAR(3),
    is_pre_approved BOOLEAN DEFAULT FALSE,
    is_instant_issuance BOOLEAN DEFAULT FALSE,
    is_digital_only BOOLEAN DEFAULT FALSE,
    requires_physical_card BOOLEAN DEFAULT TRUE,
    shipping_address_same_as_residential BOOLEAN DEFAULT TRUE,
    shipping_address_line1 VARCHAR(255),
    shipping_address_line2 VARCHAR(255),
    shipping_city VARCHAR(100),
    shipping_state VARCHAR(100),
    shipping_postal_code VARCHAR(20),
    shipping_country VARCHAR(3),
    shipping_method VARCHAR(50),
    credit_score INTEGER,
    credit_score_provider VARCHAR(50),
    credit_check_timestamp TIMESTAMP,
    credit_check_reference VARCHAR(50),
    kyc_status VARCHAR(50),
    kyc_reference VARCHAR(50),
    kyc_timestamp TIMESTAMP,
    aml_status VARCHAR(50),
    aml_reference VARCHAR(50),
    aml_timestamp TIMESTAMP,
    approval_timestamp TIMESTAMP,
    approved_by VARCHAR(50),
    rejection_reason VARCHAR(255),
    rejection_timestamp TIMESTAMP,
    rejection_code VARCHAR(50),
    card_id UUID REFERENCES card(card_id),
    card_issuance_timestamp TIMESTAMP,
    terms_accepted BOOLEAN DEFAULT FALSE,
    terms_accepted_timestamp TIMESTAMP,
    terms_version VARCHAR(50),
    supporting_documents TEXT,
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Alert table
CREATE TABLE card_alert (
    alert_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    party_id UUID,
    alert_type VARCHAR(50),
    alert_name VARCHAR(255),
    alert_description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    notification_channel VARCHAR(50),
    notification_destination VARCHAR(255),
    threshold_amount DOUBLE PRECISION,
    currency_code VARCHAR(3),
    is_above_threshold BOOLEAN DEFAULT TRUE,
    last_triggered_date TIMESTAMP,
    created_by VARCHAR(50),
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Fraud Case table
CREATE TABLE fraud_case (
    fraud_case_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    transaction_id UUID REFERENCES card_transaction(card_transaction_id),
    party_id UUID,
    account_id UUID,
    case_reference VARCHAR(50),
    provider_reference VARCHAR(50),
    network_reference VARCHAR(50),
    fraud_type VARCHAR(50),
    fraud_reason_code VARCHAR(50),
    fraud_reason_description VARCHAR(255),
    fraud_status VARCHAR(50),
    fraud_score INTEGER,
    risk_level VARCHAR(50),
    detection_source VARCHAR(50),
    detection_timestamp TIMESTAMP,
    reported_by_party BOOLEAN DEFAULT FALSE,
    reported_timestamp TIMESTAMP,
    affected_amount DECIMAL(19, 4),
    affected_currency VARCHAR(3),
    is_card_blocked BOOLEAN DEFAULT FALSE,
    block_timestamp TIMESTAMP,
    is_party_notified BOOLEAN DEFAULT FALSE,
    notification_timestamp TIMESTAMP,
    notification_method VARCHAR(50),
    is_cardholder_credited BOOLEAN DEFAULT FALSE,
    credit_timestamp TIMESTAMP,
    credit_amount DECIMAL(19, 4),
    credit_currency VARCHAR(3),
    resolution_timestamp TIMESTAMP,
    resolution_code VARCHAR(50),
    resolution_description VARCHAR(255),
    is_police_report_filed BOOLEAN DEFAULT FALSE,
    police_report_number VARCHAR(50),
    police_report_date TIMESTAMP,
    evidence_documents TEXT,
    assigned_agent_id UUID,
    assigned_agent_name VARCHAR(100),
    is_card_reissued BOOLEAN DEFAULT FALSE,
    new_card_id UUID REFERENCES card(card_id),
    last_updated_timestamp TIMESTAMP,
    notes TEXT,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);

-- Card Enrollment table
CREATE TABLE card_enrollment (
    enrollment_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    card_id UUID REFERENCES card(card_id),
    party_id UUID,
    service_type VARCHAR(50),
    service_name VARCHAR(255),
    enrollment_date TIMESTAMP,
    enrollment_status VARCHAR(50),
    enrollment_channel VARCHAR(50),
    is_active BOOLEAN DEFAULT TRUE,
    deactivation_date TIMESTAMP,
    deactivation_reason VARCHAR(255),
    fee_amount DOUBLE PRECISION,
    fee_frequency VARCHAR(50),
    currency_code VARCHAR(3),
    next_billing_date TIMESTAMP,
    date_created TIMESTAMP,
    date_updated TIMESTAMP
);
